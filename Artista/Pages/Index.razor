@page "/"
@using Artista.Data.Model
@inject NavigationManager navegacao
@inject ArtistaControler artistaControler
@using System.Data;


<div style="padding: 10px 10px 10px;">
    <h4>Cadastro de artista</h4>
    <button class="btn btn-primary" @onclick="@(()=> navegacao.NavigateTo("/cadastroartista"))">Incluir novo Registro</button>
    <div class="alert-danger">@erro</div>
    <input type="text" @bind="filtro" @onkeyup="Pesquisar" @onkeydown="Limpar" />
    <button @onclick="Pesquisar" class="btn btn-outline-info">Filtrar</button>
    @*<button @onclick="Limpar" class="btn btn-danger">Limpar</button>*@
</div>

@* a função onkeyup e onkeydown habilita as teclas enter e Backspace   *@

@if (dt == null)
{
    <h1>Carregando...</h1>
}
else if (dt.Rows.Count == 0)
{
    <h1>Não existem cadastros...</h1>
}
else
{
    <div class="form-group">
        <table class="table">
            <thead>
                <tr>
                    <th><a @onclick="@(() => Ordenar(1))" style="cursor: pointer">Nome</a></th>
                    <th><a @onclick="@(() => Ordenar(2))" style="cursor: pointer">Musica</a></th>
                    <th>Editar</th>
                    <th>Deletar</th>
                </tr>
            </thead>
            <tbody>
                @foreach (DataRow a in dt.Rows)
                {
                    <tr id="active">
                        <td><a style="cursor: pointer" @onclick="@(() => navegacao.NavigateTo("/detalhes/" + a["artistaId"]))">@a["NomeArtista"]</a></td>
                        <td>@a["MusicaArtista"]</td>
                        <td><a class="btn btn-primary oi oi-pencil" @onclick="@(()=> navegacao.NavigateTo("/editar/" + a["artistaId"]))"></a></td>
                        <td><a @onclick="@(()=>Deletar(@a["artistaId"]))" class="btn btn-danger oi oi-trash"></a></td>
                    </tr>
                }

            </tbody>
        </table>

        <Confirmar @ref="@confirma" onCancela="@Cancelar" onConfirma="@DeletarConfirma">
            <div>Deseja escluir o item ?</div>
        </Confirmar>
    </div>
}

@code{
    DataTable dt = new DataTable();
    Confirmar confirma;
    object idDeleta;
    private string filtro = string.Empty;
    string erro;

    protected override async Task OnInitializedAsync()
    {
        dt = await artistaControler.LerDadosDataTable();
    }
    //deletar
    void Deletar(object artistaid)
    {
        confirma.Exibir();
        idDeleta = artistaid;
    }
    async Task DeletarConfirma()
    {
        DataRow[] row = dt.Select("artistaId =" + idDeleta);
        if(row.Length > 0)
        {
            row[0].Delete();
            await artistaControler.AdicionarDataTable(dt);
            confirma.Ocultar();
            dt = await artistaControler.LerDadosDataTable();

        }
    }
    void Cancelar()
    {
        confirma.Ocultar();
    }
    //ordernar
    private void Ordenar(int ordem)
    {
        switch (ordem)
        {
            case 1:
                // dt = dt.Select().OrderBy(u => u["NomeArtista"]).CopyToDataTable();
                dt.DefaultView.Sort = "NomeArtista ASC" ;
                dt = dt.DefaultView.ToTable(true);
                break;
            case 2:
                //dt = dt.Select().OrderBy(u => u["MusicaArtista"]).CopyToDataTable();
                dt.DefaultView.Sort = "MusicaArtista DESC";
                dt = dt.DefaultView.ToTable(true);
                break;
            default:
                break;
        }
    }
    //pesquisar
    public void Pesquisar()
    {
        //verificar como retorna os dados sem informar o registro tal como esta no banco de dados

        try
        {
            //Filtro é a string que vem do input, que o usuario digita
            dt.DefaultView.RowFilter = "NomeArtista like '" + filtro + "%'";
            dt = dt.DefaultView.ToTable(true);
            erro = string.Empty;
        }
        catch (Exception ex)
        {

            erro = "erro " + ex.Message;
        }

    }

    public async Task Limpar()
    {
        filtro = string.Empty;
        dt = await artistaControler.LerDadosDataTable();
    }

}


