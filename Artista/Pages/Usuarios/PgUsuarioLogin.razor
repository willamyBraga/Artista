@layout LoginLayout
@page "/"
@inject NavigationManager navegacao
@inject MeUsuarios usuario

<div class="mx-auto d-flex flex-column" style="width: 400px; height: 700px; margin-top: 30px">
    <div>
        <img src="/Img/Logo-Christus-Colorida2.png" class="img-fluid" />
        <h5 class="card-title text-center" style="color:midnightblue">
            <b>Cadastro de Artistas</b>
        </h5>
        <hr class="my-4">
    </div>
    <EditForm Model="@dt" OnValidSubmit="@LoginUsuario">
        <div style="display:grid">
            <div>
                <input type="text" @bind="@loginusuario" required placeholder="insira o seu usuario" class="form-control" />
            </div>
            <br />
            <div>
                <input required type="password" @bind="@senhausuario" placeholder="insira a sua senha" class="form-control" />
            </div>
            <br />
            <div style="margin-top: 10px;">
                <button class="btn btn-primary btn-lg btn-block" type="submit">Login</button>
            </div>
        </div>
    </EditForm>
    <div class="alert-danger">@result</div>
</div>

@code

 {
    private string loginusuario;
    private string senhausuario;

    DataTable dt;
    DadosAutenticado formulario;

    string result;

    protected override async Task OnInitializedAsync()
    {
        dt = await usuario.lerDadosdatatable();
    }
    async Task LoginUsuario()
    {
        senhausuario = Criptografia.Encriptografar(senhausuario);
        try
        {
            dt = await usuario.dtLogin(senhausuario);
            if (dt.Rows.Count > 0)
            {
                //result = "usuario encontrado";           
                navegacao.NavigateTo("/home");

            }
            else
            {
                result = "nenhum usuario encontrado...";

            }

        }
        catch (Exception ex)
        {
            result = "Usuario não encontrado " + ex.Message;
        }       
    }
}
